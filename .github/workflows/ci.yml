name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    name: Backend (lint + tests)
    runs-on: ubuntu-latest
    env:
      DJANGO_SETTINGS_MODULE: config.settings
      PYTHONDONTWRITEBYTECODE: "1"
      PYTHONUNBUFFERED: "1"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Install deps
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install black isort flake8
      - name: Lint (black/isort/flake8)
        run: |
          black --check .
          isort --check-only .
          flake8 .
      - name: Django tests
        run: |
          python manage.py migrate --noinput
          python manage.py test --noinput -v 2

  frontend:
    name: Frontend (lint + build)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
      - name: Install deps
        run: npm ci
      - name: Lint
        run: npm run lint --if-present
      - name: Build
        env:
          VITE_API_URL: "http://localhost:8000/api"
        run: npm run build

  docker:
    name: Docker images (dev & prod)
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build dev (compose)
        run: |
          docker compose -f docker-compose.yml config >/dev/null
      - name: Build backend:prod
        uses: docker/build-push-action@v6
        with:
          context: .
          file: backend/Dockerfile.prod
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: ghcr.io/${{ github.repository }}/backend:latest
      - name: Build frontend:prod
        uses: docker/build-push-action@v6
        with:
          context: frontend
          file: frontend/Dockerfile.prod
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: ghcr.io/${{ github.repository }}/frontend:latest
